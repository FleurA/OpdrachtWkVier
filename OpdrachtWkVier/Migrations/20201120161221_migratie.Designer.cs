// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpdrachtWkVier;

namespace OpdrachtWkVier.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20201120161221_migratie")]
    partial class migratie
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ArtiestGig", b =>
                {
                    b.Property<Guid>("GigsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("artiestenId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GigsId", "artiestenId");

                    b.HasIndex("artiestenId");

                    b.ToTable("ArtiestGig");
                });

            modelBuilder.Entity("OpdrachtWkVier.Boeking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BoekerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("locatiehuisnummer")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("locatiepostcode")
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.HasIndex("BoekerId");

                    b.HasIndex("locatiepostcode", "locatiehuisnummer");

                    b.ToTable("Boekingen");
                });

            modelBuilder.Entity("OpdrachtWkVier.Gig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BoekingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Omschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("duurInMinuten")
                        .HasColumnType("int")
                        .HasColumnName("duurInMin");

                    b.Property<double>("prijsPerKwartier")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BoekingId");

                    b.ToTable("Gigs");
                });

            modelBuilder.Entity("OpdrachtWkVier.Locatie", b =>
                {
                    b.Property<string>("postcode")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("huisnummer")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("postcode", "huisnummer");

                    b.ToTable("Locaties");
                });

            modelBuilder.Entity("OpdrachtWkVier.Profiel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ArtiestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomCss")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArtiestId");

                    b.ToTable("Profielen");
                });

            modelBuilder.Entity("OpdrachtWkVier.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("OpdrachtWkVier.Artiest", b =>
                {
                    b.HasBaseType("OpdrachtWkVier.User");

                    b.Property<Guid?>("BoekingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("BoekingId");

                    b.HasDiscriminator().HasValue("Artiest");
                });

            modelBuilder.Entity("OpdrachtWkVier.Boeker", b =>
                {
                    b.HasBaseType("OpdrachtWkVier.User");

                    b.HasDiscriminator().HasValue("Boeker");
                });

            modelBuilder.Entity("ArtiestGig", b =>
                {
                    b.HasOne("OpdrachtWkVier.Gig", null)
                        .WithMany()
                        .HasForeignKey("GigsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpdrachtWkVier.Artiest", null)
                        .WithMany()
                        .HasForeignKey("artiestenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OpdrachtWkVier.Boeking", b =>
                {
                    b.HasOne("OpdrachtWkVier.Boeker", "Boeker")
                        .WithMany()
                        .HasForeignKey("BoekerId");

                    b.HasOne("OpdrachtWkVier.Locatie", "locatie")
                        .WithMany()
                        .HasForeignKey("locatiepostcode", "locatiehuisnummer");

                    b.Navigation("Boeker");

                    b.Navigation("locatie");
                });

            modelBuilder.Entity("OpdrachtWkVier.Gig", b =>
                {
                    b.HasOne("OpdrachtWkVier.Boeking", null)
                        .WithMany("Gigs")
                        .HasForeignKey("BoekingId");
                });

            modelBuilder.Entity("OpdrachtWkVier.Profiel", b =>
                {
                    b.HasOne("OpdrachtWkVier.Artiest", "Artiest")
                        .WithMany()
                        .HasForeignKey("ArtiestId");

                    b.Navigation("Artiest");
                });

            modelBuilder.Entity("OpdrachtWkVier.Artiest", b =>
                {
                    b.HasOne("OpdrachtWkVier.Boeking", null)
                        .WithMany("GeboekteArtiesten")
                        .HasForeignKey("BoekingId");
                });

            modelBuilder.Entity("OpdrachtWkVier.Boeking", b =>
                {
                    b.Navigation("GeboekteArtiesten");

                    b.Navigation("Gigs");
                });
#pragma warning restore 612, 618
        }
    }
}
